<?php
/**
 * This file is part of the <name> project.
 *
 * (c) <yourname> <youremail>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Application\Sonata\NewsBundle\Entity;

use Sonata\NewsBundle\Entity\BasePostRepository;

/**
 * This file has been generated by the EasyExtends bundle ( http://sonata-project.org/easy-extends )
 *
 * References :
 *   custom repository : http://www.doctrine-project.org/projects/orm/2.0/docs/reference/working-with-objects/en#querying:custom-repositories
 *   query builder     : http://www.doctrine-project.org/projects/orm/2.0/docs/reference/query-builder/en
 *   dql               : http://www.doctrine-project.org/projects/orm/2.0/docs/reference/dql-doctrine-query-language/en
 *
 * @author <yourname> <youremail>
 */
class PostRepository extends BasePostRepository
{
	public function findLastSlides($limit)
	{
		$qb = $this->createQueryBuilder('p');
			
		$qb->where('p.enabled = true')
		    ->andWhere($qb->expr()->isNotNull('p.image'))
		    ->setMaxResults($limit)
		;

		$query = $qb->getQuery();

		return $query->getResult();
	}

	public function findNews()
	{
		$query = $this->getEntityManager()->createQuery('
			SELECT p
			FROM Application\Sonata\NewsBundle\Entity\Post p
			WHERE p.publicationDateStart <= CURRENT_TIMESTAMP()
			AND p.enabled = 1
			ORDER BY p.createdAt DESC
		');

		return $query->getResult();
	}

	public function findNewsByCategory($category)
	{
		$query = $this->getEntityManager()->createQuery('
			SELECT p
			FROM Application\Sonata\NewsBundle\Entity\Post p
			WHERE p.publicationDateStart <= CURRENT_TIMESTAMP()
			AND p.enabled = 1
			AND p.category = :category
			ORDER BY p.createdAt DESC
		')->setParameter('category', $category);

		return $query->getResult();
	}

	public function findLastNews($limit = 8)
	{
		$query = $this->getEntityManager()->createQuery('
			SELECT p
			FROM Application\Sonata\NewsBundle\Entity\Post p
			WHERE p.publicationDateStart <= CURRENT_TIMESTAMP()
			AND p.enabled = 1
			ORDER BY p.createdAt DESC
		')->setMaxResults($limit);

		return $query->getResult();
	}
}